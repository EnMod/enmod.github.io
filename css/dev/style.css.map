{"version":3,"sources":["node_modules/axis/axis/reset.styl","node_modules/axis/node_modules/nib/lib/nib/flex.styl","node_modules/axis/node_modules/nib/lib/nib/vendor.styl","node_modules/axis/node_modules/nib/lib/nib/border.styl","node_modules/axis/node_modules/nib/lib/nib/overflow.styl","assets/css/dev/style.styl","node_modules/typographic/stylus/typographic.styl","node_modules/rupture/rupture/index.styl","node_modules/axis/axis/utilities.styl","node_modules/axis/axis/vendor.styl","node_modules/axis/axis/interaction.styl"],"names":[],"mappings":"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","sourcesContent":["// -----\n// Reset\n// -----\n\n// global-reset delegated to nib\n\nsupport-for-ie ?= true\n\n// Mixin: Normalize CSS\n// Based on v3.0.1 https://github.com/necolas/normalize.css\n\nnormalize-css()\n  html\n    font-family: sans-serif\n    -ms-text-size-adjust: 100%\n    -webkit-text-size-adjust: 100%\n\n  body\n    margin: 0\n\n  article, aside, details, figcaption, figure, footer, header, hgroup, main, nav, section, summary\n    display: block\n\n  audio, canvas, progress, video\n    display: inline-block\n    vertical-align: baseline\n\n  audio:not([controls])\n    display: none\n    height: 0\n\n  [hidden], template\n    display: none\n\n  a\n    background: transparent\n\n    &:active, &:hover\n      outline: 0\n\n  abbr[title]\n    border-bottom: 1px dotted\n\n  b, strong\n    font-weight: bold\n\n  dfn\n    font-style: italic\n\n  h1\n    font-size: 2em\n    margin: 0.67em 0\n\n  mark\n    background: #ff0\n    color: #000\n\n  small\n    font-size: 80%\n\n  sub, sup\n    font-size: 75%\n    line-height: 0\n    position: relative\n    vertical-align: baseline\n\n  sup\n    top: -0.5em\n\n  sub\n    bottom: -0.25em\n\n  img\n    border: 0\n\n  svg:not(:root)\n    overflow: hidden\n\n  figure\n    margin: 1em 40px\n\n  hr\n    -moz-box-sizing: content-box\n    box-sizing: content-box\n    height: 0\n\n  pre\n    overflow: auto\n\n  code, kbd, pre, samp\n    font-family: monospace, monospace\n    font-size: 1em\n\n  button, input, optgroup, select, textarea\n    color: inherit\n    font: inherit\n    margin: 0\n\n  button\n    overflow: visible\n\n  button, select\n    text-transform: none\n\n  button, html input[type=\"button\"], input[type=\"reset\"], input[type=\"submit\"]\n    -webkit-appearance: button\n    cursor: pointer\n\n  button[disabled], html input[disabled]\n    cursor: default\n\n  button::-moz-focus-inner, input::-moz-focus-inner\n    border: 0\n    padding: 0\n\n  input\n    line-height: normal\n\n  input[type=\"checkbox\"], input[type=\"radio\"]\n    box-sizing: border-box\n    padding: 0\n\n  input[type=\"number\"]::-webkit-inner-spin-button, input[type=\"number\"]::-webkit-outer-spin-button\n    height: auto\n\n  input[type=\"search\"]\n    -webkit-appearance: textfield\n    -moz-box-sizing: content-box\n    -webkit-box-sizing: content-box\n    box-sizing: content-box\n\n  input[type=\"search\"]::-webkit-search-cancel-button, input[type=\"search\"]::-webkit-search-decoration\n    -webkit-appearance: none\n\n  fieldset\n    border: 1px solid #c0c0c0\n    margin: 0 2px\n    padding: 0.35em 0.625em 0.75em\n\n  legend\n    border: 0\n    padding: 0\n\n  textarea\n    overflow: auto\n\n  optgroup\n    font-weight: bold\n\n  table\n    border-collapse: collapse\n    border-spacing: 0\n\n  td, th\n    padding: 0\n","/*\n * Vendor \"display: flex\" support with fallback to obsolete versions.\n */\n\nflex-version ?= box flex\n\n//\n// 1. Display values\n//    - http://www.w3.org/TR/css3-flexbox/#flex-containers\n//\ndisplay(type, args...)\n  if flex == type || inline-flex == type\n    if box in flex-version\n      if flex == type\n        display: -ms-flexbox args\n        display: vendor-value(box args, only: moz webkit)\n      else\n        display: -ms-inline-flexbox args\n        display: vendor-value(inline-box args, only: moz webkit)\n    if flex in flex-version\n      display: vendor-value(arguments, only: webkit official) // overwrites old webkit\n  else\n    display: arguments\n\n/*\n * New syntax for browsers like Google Chrome.\n * Plus a translation to the old syntax, if possible.\n */\n\n\n//\n// 5. Ordering and Orientation\n//    - http://www.w3.org/TR/css3-flexbox/#ordering-and-orientation\n//\n-flex-obsolete-direction(direction)\n  if box in flex-version\n    if row-reverse == direction || column-reverse == direction\n      vendor('box-direction', reverse, ignore: ms official)\n\n    if row == direction || row-reverse == direction\n      vendor('box-orient', horizontal, ignore: ms official)\n    else if column == direction || column-reverse == direction\n      vendor('box-orient', vertical, ignore: ms official)\n\n-flex-obsolete-wrap(value)\n  if box in flex-version\n    // WARN: wrap-reverse does not have a box equivalent. This will render in different manners\n    //    on box vs. flex values.\n    if 'wrap' == value || wrap-reverse == value\n      vendor('box-lines', multiple, ignore: ms official)\n    else if nowrap == value\n      vendor('box-lines', single, ignore: ms official)\n\nflex-direction(direction)\n  // obsolete\n  -flex-obsolete-direction(direction)\n\n  // new\n  if flex in flex-version\n    vendor('flex-direction', arguments, only: webkit ms official)\n\nflex-wrap(value)\n  // obsolete\n  -flex-obsolete-wrap(value)\n\n  if flex in flex-version\n    vendor('flex-wrap', arguments, only: webkit ms official)\n\nflex-flow()\n  // obsolete\n  -flex-obsolete-direction(arguments[0])\n  -flex-obsolete-direction(arguments[1])\n  -flex-obsolete-wrap(arguments[0])\n  -flex-obsolete-wrap(arguments[1])\n\n  // new\n  if flex in flex-version\n    vendor('flex-flow', arguments, only: webkit ms official)\n\n\norder()\n  // obsolete\n  if box in flex-version\n    vendor('box-ordinal-group', arguments, ignore: ms official)\n\n  // new\n  if flex in flex-version\n    vendor('flex-order', arguments, only: ms)\n    vendor('order', arguments, only: webkit official)\n\n\n//\n// 7. Flexibility\n//    - http://www.w3.org/TR/css3-flexbox/#flexibility\n//\nflex-grow(growth)\n  // obsolete\n  if box in flex-version\n    vendor('box-flex', growth)\n\n  // new\n  if flex in flex-version\n    vendor('flex-grow', arguments, only: webkit official)\n\nflex-basis()\n  if flex in flex-version\n    vendor('flex-basis', arguments, only: webkit official)\n\nflex-shrink()\n  if flex in flex-version\n    vendor('flex-shrink', arguments, only: webkit official)\n\nflex(growth)\n\n  // obsolete\n  if box in flex-version\n    shrink = 1\n\n    if none == growth || initial == growth\n      // Well known values\n      shrink = 0 if none == growth\n      growth = 0\n    else if is-width(growth) == true\n      // Basis is defined as the first parameter\n      growth = arguments[1] || 0\n      shrink = arguments[2] if 3 <= length(arguments)\n    else if arguments[1] && is-width(arguments[1]) == false\n      // Growth is first and shrink is second\n      shrink = arguments[1]\n\n    // Since we can't make the distinction between growing and shrinking in the box model, take\n    // the one that provides the most flexibility.\n    vendor('box-flex', max(growth, shrink), ignore: ms)\n\n  // new\n  if flex in flex-version\n    vendor('flex', arguments, only: webkit ms official)\n\n\n// converts the justification alignment\n-convert-justify(align)\n  if flex-start == align\n    return start\n  else if flex-end == align\n    return end\n  else if space-around == align\n    return distribute\n  else if space-between == align\n    return justify\n  else\n    return align\n\n//\n// 8. Alignment\n//    - http://www.w3.org/TR/css3-flexbox/#alignment\n//\njustify-content(align)\n  // obsolete\n  if box in flex-version\n    vendor('box-pack', -convert-justify(align), ignore: ms official)\n\n  // new\n  if flex in flex-version\n    vendor('flex-pack', -convert-justify(align), only: ms)\n    vendor('justify-content', align, only: webkit official)\n\nalign-content(align)\n  // WARN: Obsolete spec does not allow for adjustment here\n  if flex in flex-version\n    vendor('flex-line-pack', -convert-justify(align), only: ms)\n    vendor('align-content', align, only: webkit official)\n\n// converts alignment from 'flex' to normal value\n-convert-alignment(align)\n  if flex-start == align\n    return start\n  else if flex-end == align\n    return end\n  else\n    return align\n\nalign-items(align)\n  // obsolete\n  if box in flex-version\n    vendor('box-align', -convert-alignment(align), ignore: ms official)\n\n  // new\n  if flex in flex-version\n    vendor('flex-align', -convert-alignment(align), only: ms)\n    vendor('align-items', arguments, only: webkit official)\n\nalign-self(align)\n  // WARN: Obsolete spec does not allow for overriding alignment on individual items.\n  if flex in flex-version\n    vendor('align-self', align, only: webkit official)\n    vendor('flex-item-align', -convert-alignment(align), only: ms)\n","use('../nodes/vendor-helpers.js')\n@import 'config'\n\n/*\n * Alias \"nowrap\" as \"no-wrap\".\n */\n\nno-wrap = unquote('nowrap')\n\n/*\n * Helper to find out if a given value is a width\n */\n\nis-width(val)\n  if auto == val\n    return true\n  else if val && 'unit' == type(val)\n    // Stylus does not short circuit so we need to perform this as a distinct\n    // operation to prevent errors\n    return '' != unit(val)\n  return false\n\n/*\n * Vendor support for the given prop / arguments, optionally specifying the\n * only prefixes to utilize, or those which should be ignored.\n */\n\nvendor(prop, args, only = null, ignore = null, vendor-property = true)\n  need_normalize = !vendor-property or prop in ('transition' 'transition-property' 'border-image' 'border-image-slice')\n  for prefix in vendor-prefixes\n    unless (only and !(prefix in only)) or (ignore and prefix in ignore)\n      if official == prefix\n        if need_normalize\n          {prop}: normalize(prop,('%s' % args))\n        else\n          {prop}: args\n      else\n        newprop = prop\n        newprop = '-' + prefix + '-' + prop if vendor-property\n\n        if need_normalize\n          {newprop}: normalize(prop,('%s' % args),prefix)\n        else\n          {newprop}: args\n/*\n * Vendorize the given value.\n */\n\nvendor-value(arg, only = null, ignore = null)\n  prop = current-property[0]\n  for prefix in vendor-prefixes\n    unless (only and !(prefix in only)) or (ignore and prefix in ignore) or official == prefix\n      add-property(prop, '-%s-%s' % (prefix arg))\n  arg\n\n/*\n * Vendor \"box-shadow\" support.\n */\n\nbox-shadow()\n  vendor('box-shadow', arguments, only: webkit official)\n\n/*\n * Vendor \"user-select\" support.\n */\n\nuser-select()\n  vendor('user-select', arguments, only: webkit moz ms official)\n\n/*\n * Vendor \"column-count\" support.\n */\n\ncolumn-count()\n  vendor('column-count', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-gap\" support.\n */\n\ncolumn-gap()\n  vendor('column-gap', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-rule\" support.\n */\n\ncolumn-rule()\n  vendor('column-rule', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-rule-color\" support.\n */\n\ncolumn-rule-color()\n  vendor('column-rule-color', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-rule-width\" support.\n */\n\ncolumn-rule-width()\n  vendor('column-rule-width', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-rule-style\" support.\n */\n\ncolumn-rule-style()\n  vendor('column-rule-style', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-width\" support.\n */\n\ncolumn-width()\n  vendor('column-width', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-span\" support.\n */\n\ncolumn-span()\n  vendor('column-span', arguments, only: webkit official)\n\n/*\n * Vendor \"column-fill\" support.\n */\n\ncolumn-fill()\n  vendor('column-fill', arguments, only: moz)\n\n/*\n * Legacy syntax support for background-clip and background-origin\n */\n\nlegacy-bg-values(property, args)\n  legacy_args = ()\n  importance = unquote('')\n  for subargs in args\n    for arg in subargs\n      if arg in (border-box padding-box content-box)\n        arg = unquote('border')  if arg == border-box\n        arg = unquote('padding') if arg == padding-box\n        arg = unquote('content') if arg == content-box\n      if arg != '!important'\n        push(legacy_args,arg)\n      else\n        importance = !important\n  vendor(property, unquote(join(', ',legacy_args)) importance, only: moz webkit)\n\n/*\n * Vendor \"background-clip\" support.\n */\n\nbackground-clip()\n  if arguments[0] == text\n    vendor('background-clip', arguments, only: webkit)\n  else\n    legacy-bg-values('background-clip', arguments)\n    background-clip: arguments\n\n/*\n * Vendor \"background-origin\" support.\n */\n\nbackground-origin()\n  legacy-bg-values('background-origin', arguments)\n  background-origin: arguments\n\n/*\n * Vendor \"background-size\" support.\n */\n\nbackground-size()\n  vendor('background-size', arguments, only: webkit moz official)\n\n/*\n * Vendor \"transform\" support.\n */\n\ntransform()\n  vendor('transform', arguments)\n\n/*\n * Vendor \"transform-origin\" support.\n */\ntransform-origin()\n    vendor('transform-origin', arguments)\n\n/*\n * Vendor \"transform-style\" support.\n */\n\ntransform-style()\n  vendor('transform-style', arguments)\n\n/*\n * Vendor \"border-image\" support.\n */\n\nborder-image()\n  vendor('border-image', arguments, only: webkit moz o official)\n\n/*\n * Vendor \"transition\" support.\n */\n\ntransition()\n  vendor('transition', arguments)\n\n/*\n * Vendor \"transition-property\" support.\n */\n\ntransition-property()\n  vendor('transition-property', arguments)\n\n/*\n * Vendor \"transition-duration\" support.\n */\n\ntransition-duration()\n  vendor('transition-duration', arguments)\n\n/*\n * Vendor \"transition-timing-function\" support.\n */\n\ntransition-timing-function()\n  vendor('transition-timing-function', arguments)\n\n/*\n * Vendor \"transition-delay\" support.\n */\n\ntransition-delay()\n  vendor('transition-delay', arguments)\n\n/*\n * Vendor \"backface-visibility\" support.\n */\n\nbackface-visibility()\n  vendor('backface-visibility', arguments, only: webkit moz ms official)\n\n/*\n * Vendor \"perspective\" support.\n */\n\nperspective()\n  if mixin\n    vendor('perspective', arguments, only: webkit moz ms official)\n  else\n    'perspective(%s)' % arguments\n\n/*\n * Vendor \"perspective-origin\" support.\n */\n\nperspective-origin()\n  vendor('perspective-origin', arguments, only: webkit moz ms official)\n\n/*\n * Opacity with conditional IE support.\n */\n\nopacity(n, args...)\n  opacity: n args\n  if support-for-ie\n    if n == inherit or n == initial\n      -ms-filter: n args\n      filter: n args\n    else\n      val = round(n * 100)\n      if val == 100\n        -ms-filter: none args\n        filter: none args\n      else\n        -ms-filter: '\"progid:DXImageTransform.Microsoft.Alpha(Opacity=%s)\"' % val args\n        filter: 'alpha(opacity=%s)' % val args\n\n/*\n * Vendor \"text-size-adjust\"\n */\n\ntext-size-adjust()\n  vendor('text-size-adjust', arguments)\n\n/*\n * Alias the \"white-space\" property.\n */\n\nwhitespace()\n  white-space: arguments\n\n/*\n * Vendor \"box-sizing\" support.\n */\n\nbox-sizing()\n  vendor('box-sizing', arguments, only: webkit moz official)\n\n/*\n * Vendor \"box-orient\" support.\n */\n\nbox-orient()\n  vendor('box-orient', arguments, only: webkit moz official)\n\n/*\n * Vendor \"box-flex-group\" support.\n */\n\nbox-flex-group()\n  vendor('box-flex-group', arguments, only: webkit moz official)\n\n/*\n * Vendor \"box-ordinal-group\" support.\n */\n\nbox-ordinal-group()\n  vendor('box-ordinal-group', arguments, only: webkit moz ms official)\n\n\n/*\n * Vendor \"box-align\" support.\n */\n\nbox-align()\n  vendor('box-align', arguments, only: webkit moz ms official)\n\n/*\n * Vendor \"box-pack\" support.\n */\n\nbox-pack()\n  vendor('box-pack', arguments, only: webkit moz ms official)\n\n/*\n * Vendor \"box-direction\" support.\n */\n\nbox-direction()\n  vendor('box-direction', arguments, only: webkit moz ms official)\n\n/*\n * Vendor \"animation\" support.\n */\n\nanimation()\n  vendor('animation', arguments)\n\n\n/*\n * Vendor \"animation-name\" support.\n */\n\nanimation-name()\n  vendor('animation-name', arguments)\n\n/*\n * Vendor \"animation-duration\" support.\n */\n\nanimation-duration()\n  vendor('animation-duration', arguments)\n\n/*\n * Vendor \"animation-delay\" support.\n */\n\nanimation-delay()\n  vendor('animation-delay', arguments)\n\n/*\n * Vendor \"animation-direction\" support.\n */\n\nanimation-direction()\n  vendor('animation-direction', arguments)\n\n/*\n * Vendor \"animation-iteration-count\" support.\n */\n\nanimation-iteration-count()\n  vendor('animation-iteration-count', arguments)\n\n/*\n * Vendor \"animation-timing-function\" support.\n */\n\nanimation-timing-function()\n  vendor('animation-timing-function', arguments)\n\n/*\n * Vendor \"animation-play-state\" support.\n */\n\nanimation-play-state()\n  vendor('animation-play-state', arguments)\n\n/*\n * Vendor \"animation-fill-mode\" support.\n */\n\nanimation-fill-mode()\n  vendor('animation-fill-mode', arguments)\n\n/*\n * Vendor \"hyphens\" support.\n */\n\nhyphens()\n  vendor('hyphens', arguments, only: webkit moz ms official)\n\n/*\n * Vendor \"appearance\" support.\n */\n\nappearance()\n  vendor('appearance', arguments, only: webkit moz official)\n\n/*\n * Vendor \"tab-size\" support.\n */\n\ntab-size()\n  vendor('tab-size', arguments, only: moz o official)\n\n/*\n * Vendor \"overflow-scrolling\" support.\n */\n\noverflow-scrolling()\n  vendor('overflow-scrolling', arguments, only: webkit official)\n\n/*\n * Vendor \"text-overflow\" support, , -o- for opera 9.* - 10.*\n */\n\ntext-overflow()\n  vendor('text-overflow', arguments, only: official o)\n\n/*\n * Vendor \"text-size-adjust\" support.\n */\ntext-size-adjust()\n  vendor('text-size-adjust', arguments, only: official webkit ms)\n\n/*\n * Vendor \"font-smoothing\" support, webkit only.\n */\nfont-smoothing()\n  vendor('font-smoothing', arguments, only: webkit)\n\n/*\n * Helper for border-radius().\n */\n\n-apply-border-radius(pos, importance)\n  if length(pos) == 3\n    // border-radius: <top | buttom> <left | right> <n>\n    y = pos[0]\n    x = pos[1]\n    // We don't use moz for simple boder-radius anymore\n    // vendor('border-radius-%s%s' % pos, pos[2], only: moz)\n    vendor('border-%s-%s-radius' % pos, pos[2] importance, only: webkit official)\n  else if pos[0] in (top bottom)\n    // border-radius: <top | bottom> <n>\n    -apply-border-radius(pos[0] left pos[1], importance)\n    -apply-border-radius(pos[0] right pos[1], importance)\n  else if pos[0] in (left right)\n    // border-radius: <left | right> <n>\n    unshift(pos, top);\n    -apply-border-radius(pos, importance)\n    pos[0] = bottom\n    -apply-border-radius(pos, importance)\n\n/*\n * border-radius supporting vendor prefixes and\n * augmented behavior.\n *\n * Examples:\n *\n *    border-radius: 2px 5px\n *    border-radius: top 5px bottom 10px\n *    border-radius: left 5px\n *    border-radius: top left 5px\n *    border-radius: top left 10px bottom right 5px\n *    border-radius: top left 10px, bottom right 5px\n *\n */\n\nborder-radius()\n  pos = ()\n  augmented = false\n  importance = arguments[length(arguments) - 1] == !important ? !important : unquote('')\n\n  for args in arguments\n    for arg in args\n      if arg is a 'ident'\n        append(pos, arg)\n        augmented = true\n      else\n        append(pos, arg)\n        if augmented\n          -apply-border-radius(pos, importance)\n          pos = ()\n  vendor('border-radius', pos, only: webkit official) unless augmented\n\n/**\n * Vendor input-placeholder/placeholder support.\n *\n * Examples:\n *    // Default syntax\n *    body\n *      placeholder(color #333, font-weight normal)\n *\n *    // The comma is important\n *    .placeholder-red\n *      placeholder(color red,)\n *\n *    // We can pass a function\n *    green-placeholder()\n *      color green\n *    .placeholder-green\n *      placeholder(green-placeholder)\n *\n *    // We can pass a hash\n *    textarea\n *      placeholder((font-style italic) (font-weight bold) (padding '4px 10px'))\n */\nplaceholder()\n  for v in ':-webkit-input' '-moz' ':-moz' '-ms-input'\n    &:{v}-placeholder\n      for pair in arguments\n        if typeof(pair) == 'function'\n          pair()\n        else if pair is not null && pair[0] is not null\n          {pair[0]}: type(pair[1]) == 'string' ? s(pair[1]) : pair[1]\ninput-placeholder = placeholder\n\n/*\n * Vendor background support (gradients).\n */\n\nbackground()\n  if match('-gradient\\(', ''+arguments)\n    vendor('background', arguments, vendor-property: false)\n  else\n    background arguments\n\nbackground-image()\n  if match('-gradient\\(', ''+arguments)\n    vendor('background-image', arguments, vendor-property: false)\n  else\n    background-image arguments\n\ncursor()\n  if match('-gradient\\(', ''+arguments)\n    vendor('cursor', arguments, vendor-property: false)\n  else\n    cursor arguments\n\nlist-style()\n  if match('-gradient\\(', ''+arguments)\n    vendor('list-style', arguments, vendor-property: false)\n  else\n    list-style arguments\n\nlist-style-image()\n  if match('-gradient\\(', ''+arguments)\n    vendor('list-style-image', arguments, vendor-property: false)\n  else\n    list-style-image arguments\n","/*\n * border: <color>\n * border: ...\n */\n\nborder(color, args...)\n  if color is a 'color'\n    border: 1px solid color args\n  else\n    border: arguments\n","/*\n * Overflow utility. Maps to regular overflow, and adds an ellipsis value.\n *\n * Synopsis:\n *\n *   overflow: <type>\n *\n * Examples:\n *\n *     overflow: auto\n *     overflow: hidden\n *     overflow: ellipsis\n *\n */\n\noverflow()\n  if arguments[0] == ellipsis\n    ellipsis()\n  else\n    overflow: arguments\n","@import '_settings'\r\n\r\n// ~~~~~~~~~\r\n// ~ Setup ~\r\n// ~~~~~~~~~\r\n\r\nnormalize-css()\r\n\r\n@font-face\r\n\tfont-family enmod\r\n\tfont-style normal\r\n\tsrc url(fonts/enmod.ttf)\r\n\r\ntypographic()\r\n\r\n// ~~~~~~~~~~\r\n// ~ Mixins ~\r\n// ~~~~~~~~~~\r\nlink(style = linkStyle)\r\n\ta:link,a:visited,a:active\r\n\t\tfont-size 1em\r\n\t\tcolor linkBase\r\n\t\ttext-decoration style\r\n\ta:hover \r\n\t\tcolor linkHover\r\n\t\ttext-decoration style\r\n\r\nmarg(type,args)\r\n\tif type == top\r\n\t\tmargin-top args\r\n\tif type == bot\r\n\t\tmargin-bottom args\r\n\tif type == left\r\n\t\tmargin-left args\r\n\tif type == right\r\n\t\tmargin-right args\r\n\tif type == full\r\n\t\tmargin args\r\n\t\t\r\npad(type,args)\r\n\tif type == top\r\n\t\tpadding-top args\r\n\tif type == bot\r\n\t\tpadding-bottom args\r\n\tif type == left\r\n\t\tpadding-left args\r\n\tif type == right\r\n\t\tpadding-right args\r\n\tif type == full\r\n\t\tpadding args\r\n\r\n// ~~~~~~~~~~~~~~~~\r\n// ~ Main Styling ~\r\n// ~~~~~~~~~~~~~~~~\r\nhtml\r\n\tt-html()\r\n\t+at(4)\r\n\t\tfont-size 15px\r\n\t+at(3)\r\n\t\tfont-size 17px\r\n\t+at(2)\r\n\t\tfont-size 16px\r\n\t+density(2)\r\n\t\tfont-size 26px\r\n\t+density(3)\r\n\t\tfont-size 28px\r\n\t// overflow-y scroll\r\n\t-webkit-margin-before 0\r\n\t-webkit-margin-after 0\r\n\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td, body\r\n\tt-reset()\r\n\t-webkit-margin-before 0\r\n\t-webkit-margin-after 0\r\n\r\np, blockquote, pre,\r\naddress,\r\ndl, ol, ul,\r\ntable\r\n\tt-block()\r\n\r\nh1, h2, h3, h4, h5, h6\r\n\tt-header()\r\n\tno-select()\r\nh1\r\n\tt-h1()\r\n\tmargin-bottom 0\r\nh2\r\n\tt-h2()\r\n\t\r\nh3\r\n\tt-h3()\r\n\tfont-family $body-font\r\nh4\r\n\tt-h4()\r\n\t\r\nh5\r\n\tt-h5()\r\n\tmargin-bottom 1em\r\nh6\r\n\tt-h6()\r\n\r\nblockquote\r\n\tt-blockquote()\r\n\r\npre\r\n\tt-pre()\r\n\r\ncode\r\n\tt-code()\r\n\r\nbig, small, sub, sup\r\n\tline-height: 0\r\n\r\nabbr, acronym\r\n\tt-abbr()\r\n\r\naddress\r\n\tfont-style: normal\r\n\r\ndt\r\n\tt-dt()\r\n\r\nul\r\n\tpadding-left: 1.1em\r\n\r\nol\r\n\tpadding-left: 1.4em\r\n\r\nfieldset\r\n\tt-fieldset()\r\n\r\nlegend\r\n\tt-legend()\r\n\r\nlabel\r\n\tt-label()\r\n\r\ninput[type=\"text\"], input[type=\"email\"], input[type=\"password\"], textarea\r\n\tt-input()\r\n\r\ninput[type=\"submit\"], button\r\n\tt-button()\r\n\r\ntable\r\n\tt-table()\r\n\r\nth\r\n\tt-th()\r\n\r\ntd\r\n\tt-td()\r\n\t\r\n// ~ Number of rows for sizing ~\r\nrows = 10\r\n\r\nsection\r\n\tlost-row: 7.5/rows\r\n\t\t\r\n// have the four sections be in a rectangle as they are, and rearrange when clicked\r\nheader\r\n\tlost-row: 2/rows\r\n\t+between(2,4)\r\n\t\th1\r\n\t\t\tfont-size 56px\t\r\n\t\th3\r\n\t\t\tfont-size 37px\r\n\t+at(2)\r\n\t\th1\r\n\t\t\tfont-size 54px\t\r\n\t\th3\r\n\t\t\tfont-size 35px\r\n\t\r\nfooter\r\n\tlost-row: 0.5/rows\r\n\tdisplay block\r\n\tmargin 0 auto\r\n\t\r\nheader\r\nfooter\r\n\tmargin-bottom 0\r\n\ttext-align center\r\n.descript h3\r\n\topacity 0\r\nbody\r\n\theight 100vh\r\n\t// lost-utility edit\r\n\t\r\n// ~ Content Page Styles ~\r\n// ~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n// ~ Main Content ~\r\n\r\n#frontends-item,\r\n#games-item,\r\n#stories-item,\r\n#fresh-beats-item,\r\n#contact-item\r\n\theight 100%\r\n\tlost-center 50rem\r\n\tposition absolute\r\n\tleft 0\r\n\tright 0\r\n\tmargin-left auto\r\n\tmargin-right auto\r\n\t-webkit-perspective 1000\r\n\t//min-width 50rem\r\n\t+at(4)\r\n\t\t// lost-center 30rem\r\n\t\t// min-width 5rem\r\n\t\tmarg(top,15px)\r\n\t+at(2)\r\n\t\tlost-center 40rem\r\n\t+mobile()\r\n\t\tlost-center 90%\r\n\t+density(3)\r\n\t\tlost-center 90%\r\n\th4\r\n\t\t+at(4)\r\n\t\t\tfont-size 30px\r\n\t\t// +at(2)\r\n\t\t// \tfont-size 30px\r\n\t\t// +mobile()\r\n\t\t// \tfont-size 30px\r\n\t\t// +density(3)\r\n\t\t// \tfont-size 30px\r\n\t\ttext-align center\r\n\t\twidth 100%\r\n\tlink(underline)\r\n\r\n#frontends-item\r\n\tbackground url(/img/frontends-bg.png) no-repeat center \r\n\tbackground-size contain\r\n\topacity 0\r\n\t.slick-frontends\r\n\t\tlost-center 50rem\r\n\t\t+mobile()\r\n\t\t\tlost-center 40rem\r\n\t\t+density(2)\r\n\t\t\tlost-center 90%\r\n\t\t+density(3)\r\n\t\t\tlost-center 90%\r\n\t\t.info\r\n\t\t\tlost-column: 1/2\r\n\t\t\th4,h5\r\n\t\t\t\ttext-align left\r\n\t\t\t\tfont-family $body-font\r\n\t\t\th4\r\n\t\t\t\t+at(4)\r\n\t\t\t\t\tfont-size 23px\r\n\t\t\t\t+at(3)\r\n\t\t\t\t\tfont-size 21px\r\n\t\t\t\t+at(2)\r\n\t\t\t\t\tfont-size 20px\r\n\t\t\t\t+mobile()\r\n\t\t\t\t\tfont-size 25px\t\t\t\t\t\r\n\t\t\t\t+density(3)\r\n\t\t\t\t\tfont-size 25px\r\n\t\t\th5\r\n\t\t\t\t+at(4)\r\n\t\t\t\t\tfont-size 20px\r\n\t\t\t\t+at(3)\r\n\t\t\t\t\tfont-size 18px\r\n\t\t\t\t+at(2)\r\n\t\t\t\t\tfont-size 17px\r\n\t\t\t\t+mobile()\r\n\t\t\t\t\tfont-size 22px\r\n\t\t\t\t+density(3)\r\n\t\t\t\t\tfont-size 22px\r\n\t\t\tlink(underline)\r\n\t\t.img\r\n\t\t\tlost-column: 1/2\r\n\t\t\ta img\r\n\t\t\t\tmax-height 350px\r\n\t\t\t\tmax-width 100%\r\n\t\t\t\t+at(4)\r\n\t\t\t\t\tmax-height 250px\r\n\t\t\t\t+at(2)\r\n\t\t\t\t\tmax-height 300px\r\n\t\t\t\t+mobile()\r\n\t\t\t\t\tmax-height 450px\r\n\t\t\t\t+density(3)\r\n\t\t\t\t\tmax-height 450px\r\n\t\t\t\tlost-center 1140px\r\n\t\t\t\ttransition(all 0.1s ease-in-out-sine)\r\n\t\t\t\thover-pop()\r\n\t\t\r\n\t\timg\r\n\t\t\tlost-center 100%\r\n\t\t\tmax-height 350px\r\n\t\t\t+at(4)\r\n\t\t\t\tmax-height 250px\r\n\t\t\t+at(2)\r\n\t\t\t\tmax-height 300px\r\n\t\t\t+mobile()\r\n\t\t\t\tmax-height 450px\r\n\t\t\t+density(3)\r\n\t\t\t\tmax-height 450px\r\n\t\t\ttransition(all 0.1s ease-in-out-sine)\r\n\t\t\thover-pop()\r\n\r\n#games-item,\r\n#stories-item,\r\n#fresh-beats-item\r\n#contact-item\r\n\tdisplay none\r\n\r\n#games-item\r\n\tbackground url(/img/games-bg.png) no-repeat center \r\n\tbackground-size contain\r\n#stories-item\r\n\tbackground url(/img/stories-bg.png) no-repeat center \r\n\tbackground-size contain\r\n#fresh-beats-item\r\n\tbackground url(/img/fresh-beats-bg.png) no-repeat center \r\n\tbackground-size contain\r\n\tiframe\r\n\t\topacity 0.7\r\n\t\theight 450px\r\n\t\t+at(4)\r\n\t\t\theight 340px\r\n\t\t+at(3)\r\n\t\t\theight 400px\r\n\t\t+at(2)\r\n\t\t\theight 300px\r\n\t\t+mobile()\r\n\t\t\theight 600px\r\n\t\t\tfont-size 25px\r\n\t\t+density(3)\r\n\t\t\theight 600px\r\n\t\t\tfont-size 25px\r\n\t\t\r\n\tp\r\n\t\tmarg(bot,1em)\r\n#contact-item\r\n\tbackground url(/img/contact-bg.png) no-repeat center \r\n\tbackground-size contain\r\n\th5,h6\r\n\t\ttext-align left\r\n\t\tfont-family $body-font\r\n\r\nhr\r\n\tborder 0\r\n\tbackground-color #eee\r\n\theight 2px\r\n\tmarg(full,1em 0 1em 0)\r\n\r\n\r\nlink(none)\r\n\r\n// ~ Stage Select ~\r\n\r\n// set SS origins to center, remember max limit for sections is - 4 -\r\n\r\n.stage-select\r\n\theight 100%\r\n\twidth 100%\r\n\t-webkit-perspective 1000\r\n\t.mainnav\r\n\t\tlost-row: 9/rows\r\n\t\t+at(2)\r\n\t\t\th4\r\n\t\t\t\tfont-size 25px\r\n\t.subnav\r\n\t\topacity 0\r\n\t\tlost-row: 1/rows\r\n\t\tlost-center: 95%\r\n\t\ta.subnav-item\r\n\t\t\theight 50px\r\n\t\t\tcolor black\r\n\t\t\tdisplay block\r\n\t\t\ttext-align center\r\n\t\t\tfont-family $header-font\r\n\t\t\t+at(4)\r\n\t\t\t\tfont-size 0.9em\r\n\t\t\t+at(2)\r\n\t\t\t\tfont-size 0.8em\r\n\t\t\ttext-align center\r\n\t\t\tlost-column: 1/navitems\r\n\t\t\thover-pop(1.1)\r\n\t\t\ttransition(all 0.1s linear)\r\n\t\t","// Typographic v2.9.2 - https://github.com/corysimmons/typographic\n\n\n// Settings\n\n$line-height-ratio  = 1.75\n$header-ratio       = $golden\n$body-font          = $helvetica\n$body-font-weight   = 300\n$body-color         = #666\n$header-font        = $helvetica\n$header-font-weight = 500\n$header-color       = #111\n$min-font           = 12px\n$max-font           = 20px\n$min-width          = 600px\n$max-width          = 1140px\n$vertical-rhythm    = false\n\n\n// Ratios\n\n$minor-second   = 1.067\n$major-second   = 1.125\n$minor-third    = 1.2\n$major-third    = 1.25\n$perfect-fourth = 1.333\n$aug-fourth     = 1.414\n$perfect-fifth  = 1.5\n$minor-sixth    = 1.6\n$golden         = 1.618\n$major-sixth    = 1.667\n$minor-seventh  = 1.778\n$major-seventh  = 1.875\n$octave         = 2\n$major-tenth    = 2.5\n$major-eleventh = 2.667\n$major-twelfth  = 3\n$double-octave  = 4\n\n\n// Sans-serif\n\n$calibri       = 'Calibri', 'Candara', 'Segoe', 'Segoe UI', 'Optima', 'Arial', 'sans-serif'\n$candara       = 'Candara', 'Calibri', 'Segoe', 'Segoe UI', 'Optima', 'Arial', 'sans-serif'\n$courier       = 'Courier New', 'Courier', 'Lucida Sans Typewriter', 'Lucida Typewriter', 'monospace'\n$franklin      = 'Franklin Gothic Medium', 'Arial', 'sans-serif'\n$futura        = 'Futura', 'Trebuchet MS', 'Arial', 'sans-serif'\n$geneva        = 'Geneva', 'Tahoma', 'Verdana', 'sans-serif'\n$gill-sans     = 'Gill Sans', 'Gill Sans MT', 'Calibri', 'sans-serif'\n$helvetica     = 'Helvetica Neue', 'Helvetica', 'Arial', 'sans-serif'\n$lucida-grande = 'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', 'Geneva', 'Verdana', 'sans-serif'\n$optima        = 'Optima', 'Segoe', 'Segoe UI', 'Candara', 'Calibri', 'Arial', 'sans-serif'\n$segoe         = 'Segoe', 'Segoe UI', 'Helvetica Neue', 'Arial', 'sans-serif'\n$tahoma        = 'Tahoma', 'Geneva', 'Verdana', 'sans-serif'\n$trebuchet     = 'Trebuchet MS', 'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', 'Tahoma', 'sans-serif'\n$verdana       = 'Verdana', 'Geneva', 'sans-serif'\n\n\n// Serif\n\n$antiqua       = 'Book Antiqua', 'Palatino', 'Palatino Linotype', 'Palatino LT STD', 'Georgia', 'serif'\n$baskerville   = 'Baskerville', 'Baskerville old face', 'Hoefler Text', 'Garamond', 'Times New Roman', 'serif'\n$bodoni        = 'Bodoni MT', 'Didot', 'Didot LT STD', 'Hoefler Text', 'Garamond', 'Times New Roman', 'serif'\n$cambria       = 'Cambria', 'Georgia', 'serif'\n$caslon        = 'Big Caslon', 'Book Antiqua', 'Palatino Linotype', 'Georgia', 'serif'\n$constantia    = 'Constantia', 'Palatino', 'Palatino Linotype', 'Palatino LT STD', 'Georgia', 'serif'\n$didot         = 'Didot', 'Didot LT STD', 'Hoefler Text', 'Garamond', 'Times New Roman', 'serif'\n$garamond      = 'Garamond', 'Baskerville', 'Baskerville Old Face', 'Hoefler Text', 'Times New Roman', 'serif'\n$goudy         = 'Goudy Old Style', 'Garamond', 'Big Caslon', 'Times New Roman', 'serif'\n$hoefler       = 'Hoefler Text', 'Baskerville old face', 'Garamond', 'Times New Roman', 'serif'\n$lucida-bright = 'Lucida Bright', 'Georgia', 'serif'\n$palatino      = 'Palatino', 'Palatino Linotype', 'Palatino LT STD', \"Book Antiqua\", 'Georgia', 'serif'\n\n\n// Helpers\n\n/**\n * Creates a baseline grid based off your $line-height-ratio to help visualize your vertical rhythm grid. You can offset the grid by negative or positive pixels to line it up perfectly with the bottom of your text.\n *\n * @param {color} [$color=black] - A color to be lightened and used as the color for the grid.\n * @param {number} [$px-offset=false] - A positive or negative number of pixels to offset the grid by. Useful for lining the bottom of the gridlines up with your text.\n *\n * @example\n *   grid-overlay(blue, 2)\n */\n\ngrid-overlay($color = black, $px-offset = false)\n  body\n    background: linear-gradient(to top, rgba($color, 10%) 5%, white 5%)\n    background-size: 100% ($line-height-ratio)em\n    if $px-offset\n      background-position: 0 unit($px-offset, 'px')\n\n\n/**\n * Returns a \"vertical unit\". Useful for specifying the height and margins of non-text elements like images and such.\n *\n * @param {number} [$units=1] - Number of units. Accepts floated numbers as well.\n * @param {number} [$px-offset=false] - A positive or negative number of pixels to offset the grid by. Useful for lining the bottom of the gridlines up with your text. Since this doesn't compute a literal pixel you may need to use a floated number (multiples of .25 work well) to keep your rhythm on track.\n *\n * @example\n *   img\n *     vr-block(5.25, .5)\n */\n\nvr-block($units = 1, $px-offset = false)\n  if $px-offset\n    return ( (($line-height-ratio * $max-font) / ($max-font / 2)) * ($units / 2) * (1 + ($px-offset / $max-font)) )em\n  else\n    return ( (($line-height-ratio * $max-font) / ($max-font / 2)) * ($units / 2) )em\n\n\n// Typography Mixins\n\nt-html()\n  font-family: $body-font\n  font-weight: $body-font-weight\n  color: $body-color\n\n  font-size: $min-font\n  line-height: ($line-height-ratio)em\n\n  @media (min-width: $min-width)\n    font-size: s('calc( %s + (%s - %s) * ((100vw - %s) / (%s - %s)) )', $min-font, remove-unit($max-font), remove-unit($min-font), $min-width, remove-unit($max-width), remove-unit($min-width))\n\n  @media (min-width: $max-width)\n    font-size: $max-font\n\nt-p = t-html\n\nt-reset()\n  margin: 0\n  padding: 0\n\nt-block()\n  margin-bottom: ($line-height-ratio)em\n\nt-header()\n  font-family: $header-font\n  font-weight: $header-font-weight\n  color: $header-color\n  clear: both\n\nt-h1()\n  $local-min-font = $min-font * ($header-ratio ** 1.75)\n  $local-max-font = $max-font * ($header-ratio ** 1.75)\n\n  font-size: $local-min-font\n  if $vertical-rhythm is true\n    margin-top: (($line-height-ratio * $min-font) / ($local-min-font / 1.25))em\n    line-height: (($line-height-ratio * $min-font) / ($local-min-font / 1.5))em\n    margin-bottom: (($line-height-ratio * $min-font) / ($local-min-font / .25))em\n  else\n    margin-top: 0\n    line-height: 1.1em\n    margin-bottom: .25em\n\n  @media (min-width: $min-width)\n    font-size: s('calc( %s + (%s - %s) * ((100vw - %s) / (%s - %s)) )', $local-min-font, remove-unit($local-max-font), remove-unit($local-min-font), $min-width, remove-unit($max-width), remove-unit($min-width))\n\n  @media (min-width: $max-width)\n    font-size: $local-max-font\n    if $vertical-rhythm is true\n      margin-top: (($line-height-ratio * $max-font) / ($local-max-font / 1.25))em\n      line-height: (($line-height-ratio * $max-font) / ($local-max-font / 1.5))em\n      margin-bottom: (($line-height-ratio * $max-font) / ($local-max-font / .25))em\n\nt-h2()\n  $local-min-font = $min-font * ($header-ratio ** 1.4)\n  $local-max-font = $max-font * ($header-ratio ** 1.4)\n\n  font-size: $local-min-font\n  if $vertical-rhythm is true\n    margin-top: (($line-height-ratio * $min-font) / ($local-min-font / 1.25))em\n    line-height: (($line-height-ratio * $min-font) / ($local-min-font / 1.5))em\n    margin-bottom: (($line-height-ratio * $min-font) / ($local-min-font / .25) * (1 + (3 / $local-min-font)))em\n  else\n    margin-top: 0\n    line-height: 1.2em\n    margin-bottom: .25em\n\n  @media (min-width: $min-width)\n    font-size: s('calc( %s + (%s - %s) * ((100vw - %s) / (%s - %s)) )', $local-min-font, remove-unit($local-max-font), remove-unit($local-min-font), $min-width, remove-unit($max-width), remove-unit($min-width))\n\n  @media (min-width: $max-width)\n    font-size: $local-max-font\n    if $vertical-rhythm is true\n      margin-top: (($line-height-ratio * $max-font) / ($local-max-font / 1.25))em\n      line-height: (($line-height-ratio * $max-font) / ($local-max-font / 1.5))em\n      margin-bottom: (($line-height-ratio * $max-font) / ($local-max-font / .25) * (1 + (3 / $local-max-font)))em\n\nt-h3()\n  $local-min-font = $min-font * ($header-ratio ** 1.05)\n  $local-max-font = $max-font * ($header-ratio ** 1.05)\n\n  font-size: $local-min-font\n  if $vertical-rhythm is true\n    margin-top: (($line-height-ratio * $min-font) / ($local-min-font / 1.25))em\n    line-height: (($line-height-ratio * $min-font) / ($local-min-font / 1.5))em\n    margin-bottom: (($line-height-ratio * $min-font) / ($local-min-font / .25) * (1 + (3 / $local-min-font)))em\n  else\n    margin-top: 0\n    line-height: 1.3em\n    margin-bottom: .25em\n\n  @media (min-width: $min-width)\n    font-size: s('calc( %s + (%s - %s) * ((100vw - %s) / (%s - %s)) )', $local-min-font, remove-unit($local-max-font), remove-unit($local-min-font), $min-width, remove-unit($max-width), remove-unit($min-width))\n\n  @media (min-width: $max-width)\n    font-size: $local-max-font\n    if $vertical-rhythm is true\n      margin-top: (($line-height-ratio * $max-font) / ($local-max-font / 1.25))em\n      line-height: (($line-height-ratio * $max-font) / ($local-max-font / 1.5))em\n      margin-bottom: (($line-height-ratio * $max-font) / ($local-max-font / .25) * (1 + (3 / $local-max-font)))em\n\nt-h4()\n  $local-min-font = $min-font * ($header-ratio ** .7)\n  $local-max-font = $max-font * ($header-ratio ** .7)\n\n  font-size: $local-min-font\n  if $vertical-rhythm is true\n    margin-top: (($line-height-ratio * $min-font) / ($local-min-font / 1.25))em\n    line-height: (($line-height-ratio * $min-font) / ($local-min-font / 1.5))em\n    margin-bottom: (($line-height-ratio * $min-font) / ($local-min-font / .25) * (1 + (3 / $local-min-font)))em\n  else\n    margin-top: 0\n    line-height: 1.4em\n    margin-bottom: .25em\n\n  @media (min-width: $min-width)\n    font-size: s('calc( %s + (%s - %s) * ((100vw - %s) / (%s - %s)) )', $local-min-font, remove-unit($local-max-font), remove-unit($local-min-font), $min-width, remove-unit($max-width), remove-unit($min-width))\n\n  @media (min-width: $max-width)\n    font-size: $local-max-font\n    if $vertical-rhythm is true\n      margin-top: (($line-height-ratio * $max-font) / ($local-max-font / 1.25))em\n      line-height: (($line-height-ratio * $max-font) / ($local-max-font / 1.5))em\n      margin-bottom: (($line-height-ratio * $max-font) / ($local-max-font / .25) * (1 + (3 / $local-max-font)))em\n\nt-h5()\n  $local-min-font = $min-font * ($header-ratio ** .35)\n  $local-max-font = $max-font * ($header-ratio ** .35)\n\n  font-size: $local-min-font\n  if $vertical-rhythm is true\n    margin-top: (($line-height-ratio * $min-font) / ($local-min-font / 1.25))em\n    line-height: (($line-height-ratio * $min-font) / ($local-min-font / 1.5))em\n    margin-bottom: (($line-height-ratio * $min-font) / ($local-min-font / .25))em\n  else\n    margin-top: 0\n    line-height: 1.5em\n    margin-bottom: .25em\n\n  @media (min-width: $min-width)\n    font-size: s('calc( %s + (%s - %s) * ((100vw - %s) / (%s - %s)) )', $local-min-font, remove-unit($local-max-font), remove-unit($local-min-font), $min-width, remove-unit($max-width), remove-unit($min-width))\n\n  @media (min-width: $max-width)\n    font-size: $local-max-font\n    if $vertical-rhythm is true\n      margin-top: (($line-height-ratio * $max-font) / ($local-max-font / 1.25))em\n      line-height: (($line-height-ratio * $max-font) / ($local-max-font / 1.5))em\n      margin-bottom: (($line-height-ratio * $max-font) / ($local-max-font / .25))em\n\nt-h6()\n  $local-min-font = $min-font\n  $local-max-font = $max-font\n\n  font-size: $local-min-font\n  if $vertical-rhythm is true\n    margin-top: (($line-height-ratio * $min-font) / ($local-min-font / 1.25))em\n    line-height: (($line-height-ratio * $min-font) / ($local-min-font / 1.5))em\n    margin-bottom: (($line-height-ratio * $min-font) / ($local-min-font / .25) * (1 + (5 / $local-min-font)))em\n  else\n    margin-top: 0\n    line-height: 1.6em\n    margin-bottom: .25em\n\n  @media (min-width: $min-width)\n    font-size: s('calc( %s + (%s - %s) * ((100vw - %s) / (%s - %s)) )', $local-min-font, remove-unit($local-max-font), remove-unit($local-min-font), $min-width, remove-unit($max-width), remove-unit($min-width))\n\n  @media (min-width: $max-width)\n    font-size: $local-max-font\n    if $vertical-rhythm is true\n      margin-top: (($line-height-ratio * $min-font) / ($local-min-font / 1.25))em\n      line-height: (($line-height-ratio * $min-font) / ($local-min-font / 1.5))em\n      margin-bottom: (($line-height-ratio * $min-font) / ($local-min-font / .25) * (1 + (1 / $local-min-font)))em\n\nt-blockquote()\n  font-style: italic\n  cite\n    display: block\n    font-style: normal\n\nt-pre()\n  padding: vr-block(.5)\n  margin-bottom: vr-block(1)\n  code\n    padding: 0\n\nt-code()\n  font-family: $courier\n  padding: ($line-height-ratio * .05)em ($line-height-ratio * .15)em\n  line-height: 0\n\nt-abbr()\n  border-bottom: 1px dotted currentColor\n  cursor: help\n\nt-dt()\n  color: $header-color\n  font-weight: bold\n\nt-fieldset()\n  padding: vr-block(.5) vr-block() vr-block()\n  border-width: 1px\n  border-style: solid\n  max-width: 100%\n  margin-bottom: vr-block(1, 1)\n\n  @media (min-width: $max-width)\n    margin-bottom: vr-block(1.25, -1)\n\n  button, input[type=\"submit\"]\n    margin-bottom: 0\n\nt-legend()\n  color: $header-color\n  font-weight: bold\n\nt-label()\n  display: block\n  padding-bottom: vr-block(.125)\n  margin-bottom: vr-block(-.25, -10)\n\nt-input()\n  $local-min-font = $min-font\n  $local-max-font = $max-font\n\n  display: block\n  max-width: 100%\n  padding: vr-block(.25)\n\n  font-size: $local-min-font\n  margin-bottom: vr-block(.5, 7)\n\n  @media (min-width: $min-width)\n    font-size: s('calc( %s + (%s - %s) * ((100vw - %s) / (%s - %s)) )', $local-min-font, remove-unit($local-max-font), remove-unit($local-min-font), $min-width, remove-unit($max-width), remove-unit($min-width))\n\n  @media (min-width: $max-width)\n    font-size: $local-max-font\n    margin-bottom: vr-block(.25, 3.5)\n\nt-button()\n  $local-min-font = $min-font\n  $local-max-font = $max-font\n\n  display: block\n  cursor: pointer\n\n  font-size: $local-min-font\n  padding: vr-block(.25) vr-block()\n  margin-bottom: vr-block(.75, -2)\n\n  @media (min-width: $min-width)\n    font-size: s('calc( %s + (%s - %s) * ((100vw - %s) / (%s - %s)) )', $local-min-font, remove-unit($local-max-font), remove-unit($local-min-font), $min-width, remove-unit($max-width), remove-unit($min-width))\n\n  @media (min-width: $max-width)\n    font-size: $local-max-font\n    margin-bottom: vr-block(.75)\n\nt-table()\n  width: 100%\n  border-spacing: 0\n  border-collapse: collapse\n  margin-bottom: vr-block(1, 5)\n\n  @media (min-width: $max-width)\n    margin-bottom: vr-block(1, 3.5)\n\nt-th()\n  text-align: left\n  color: $header-color\n\n  padding: vr-block(.125) vr-block(.5)\n\n  @media (min-width: $max-width)\n    padding: vr-block(.25) vr-block(.5)\n\nt-td()\n  padding: vr-block(.125) vr-block(.5)\n\n  @media (min-width: $max-width)\n    padding: vr-block(.25) vr-block(.5)\n\n/**\n * The Typographic Reset. This is where Typographic goes through every markup element and styles it to adhere to a vertical rhythm. After you set your variables in a settings file fire this mixin.\n *\n * @example\n *   typographic()\n */\n\ntypographic()\n\n  html\n    t-html()\n\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td\n    t-reset()\n\n  p, blockquote, pre,\n  address,\n  dl, ol, ul,\n  table\n    t-block()\n\n  h1, h2, h3, h4, h5, h6\n    t-header()\n\n  h1\n    t-h1()\n\n  h2\n    t-h2()\n\n  h3\n    t-h3()\n\n  h4\n    t-h4()\n\n  h5\n    t-h5()\n\n  h6\n    t-h6()\n\n  blockquote\n    t-blockquote()\n\n  pre\n    t-pre()\n\n  code\n    t-code()\n\n  big, small, sub, sup\n    line-height: 0\n\n  abbr, acronym\n    t-abbr()\n\n  address\n    font-style: normal\n\n  dt\n    t-dt()\n\n  ul\n    padding-left: 1.1em\n\n  ol\n    padding-left: 1.4em\n\n  fieldset\n    t-fieldset()\n\n  legend\n    t-legend()\n\n  label\n    t-label()\n\n  input[type=\"text\"], input[type=\"email\"], input[type=\"password\"], textarea\n    t-input()\n\n  input[type=\"submit\"], button\n    t-button()\n\n  table\n    t-table()\n\n  th\n    t-th()\n\n  td\n    t-td()\n","base-font-size ?= 16px\nrasterise-media-queries ?= false\n\nrupture = {\n  rasterise-media-queries: rasterise-media-queries\n  mobile-cutoff: 400px\n  desktop-cutoff: 1050px\n  hd-cutoff: 1800px\n  enable-em-breakpoints: false\n  base-font-size: base-font-size\n  anti-overlap: false\n  density-queries: 'dppx' 'webkit' 'moz' 'dpi'\n  retina-density: 1.5\n  use-device-width: false\n}\nrupture.scale = 0 (rupture.mobile-cutoff) 600px 800px (rupture.desktop-cutoff) (rupture.hd-cutoff)\nrupture.scale-names = 'xs' 's' 'm' 'l' 'xl' 'hd'\n\n-is-string(val)\n  if typeof(val) is not 'unit'\n    if val is a 'string' or val is a 'ident'\n      true\n    else\n      false\n  else\n    false\n\n-get-scale-number(scale-name)\n  for list-item, i in rupture.scale-names\n    if list-item is scale-name\n      return i + 1\n  return false\n\n-convert-to(to-unit, value, context = rupture.base-font-size)\n  from-unit = unit(value)\n  return value if to-unit is from-unit\n  if to-unit in ('em' 'rem')\n    return value if from-unit in ('em' 'rem')\n    return unit((value / context), to-unit)\n  if to-unit is 'px'\n    return unit((value * context), 'px')\n\n-on-scale(n)\n  return unit(n) is ''\n\n-larger-than-scale(n)\n  return (n > (length(rupture.scale) - 1)) and -on-scale(n)\n\n-is-zero(n)\n  return n is 0\n\n-overlap-shift(anti-overlap, n)\n  shift-unit = unit(n)\n  anti-overlap = 0px unless anti-overlap\n  anti-overlap = 1px if anti-overlap is true\n  if length(anti-overlap) is 1\n    return -convert-to(shift-unit, anti-overlap)\n  for val in anti-overlap\n    return val if unit(val) is shift-unit\n\n-adjust-overlap(anti-overlap, n, side = 'min')\n  -shift = -overlap-shift(anti-overlap, n)\n  if (side is 'min' and -shift > 0) or (side is 'max' and -shift < 0)\n    n = n + -shift\n  return n\n\n-is-positive(n)\n  return n >= 0\n\n-density-queries(density)\n  if typeof(density) is not 'unit'\n    if not -is-string(density)\n      density = '%s' % density\n  density = rupture.retina-density if density is 'retina'\n  queries = ()\n  for query in rupture.density-queries\n    if query is 'webkit'\n      push(queries, '(-webkit-min-device-pixel-ratio: %s)' % (density))\n    else if query is 'moz'\n      push(queries, '(min--moz-device-pixel-ratio: %s)' % (density))\n    else if query is 'o'\n      push(queries, '(-o-min-device-pixel-ratio: %s/1)' % (density))\n    else if query is 'ratio'\n      push(queries, '(min-device-pixel-ratio: %s)' % (density))\n    else if query is 'dpi'\n      if -is-string(density)\n        density=convert(density)\n      push(queries, '(min-resolution: %sdpi)' % (round(density * 96, 1)))\n    else if query is 'dppx'\n      push(queries, '(min-resolution: %sdppx)' % (density))\n  return queries\n\ncreate-fallback-class(selected, class)\n  /{'' + class + ' ' + selected}\n    {block}\n\n// +between(min, max)\n// usage (scale can be mixed with custom values):\n//   - +between(1, 3) scale:scale\n//   - +between(0, 3) 0 width:scale\n//   - +between(200px, 500px) custom:custom\n//   - +between(0, 300px) 0 width:custom\n//   - +between(1, 300px) scale:custom\n//   - +between(200px, 4) custom:scale\n\nbetween(min, max, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  selected = selector()\n\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  if -is-string(min)\n    min = -get-scale-number(min)\n  if -is-string(max)\n    max = -get-scale-number(max)\n\n  -min = rupture.scale[min - 1] unless -is-zero(min) or (not -on-scale(min))\n  -max = rupture.scale[max] unless not -on-scale(max)\n  -min ?= min\n  -max ?= max\n\n  if (rupture.rasterise-media-queries)\n    if not (density or -max or orientation)\n      {block}\n  else\n    condition = 'only screen'\n    use-device-width = use-device-width ? 'device-' : ''\n    unless -min is 0\n      -min = -convert-to('em', -min) if rupture.enable-em-breakpoints\n      -min = -adjust-overlap(anti-overlap, -min, side: 'min')\n      condition = condition + ' and (min-' + use-device-width + 'width: %s)' % (-min)\n    unless -larger-than-scale(max)\n      -max = -convert-to('em', -max) if rupture.enable-em-breakpoints\n      -max = -adjust-overlap(anti-overlap, -max, side: 'max')\n      condition = condition + ' and (max-' + use-device-width + 'width: %s)' % (-max)\n    if orientation\n      condition = condition + ' and (orientation: %s)' % (orientation)\n    if density\n      conditions = ()\n      for query in -density-queries(density)\n        push(conditions, condition + ' and %s' % (query))\n      condition = join(', ', conditions)\n    @media condition\n      {block}\n  if fallback-class\n    +create-fallback-class(selected, fallback-class)\n      {block}\n\nat(scale-point, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(scale-point, scale-point, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nfrom-width(scale-point, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(scale-point, length(rupture.scale), anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nabove = from-width\n\nto-width(scale-point, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(1, scale-point, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nbelow = to-width\n\nmobile(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +below(rupture.mobile-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\ntablet(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(rupture.mobile-cutoff, rupture.desktop-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\ndesktop(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +above(rupture.desktop-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nhd(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +above(rupture.hd-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\ndensity(density, orientation = null, fallback-class = null)\n  selected = selector()\n  if not (rupture.rasterise-media-queries)\n    conditions = ()\n    for query in -density-queries(density)\n      condition = 'only screen and %s' % (query)\n      if orientation\n        condition = condition + ' and (orientation: %s)' % (orientation)\n      push(conditions, condition)\n    condition = join(', ', conditions)\n    @media condition\n      {block}\n    if fallback-class\n      +create-fallback-class(selected, fallback-class)\n        {block}\n\npixel-ratio = density\n\nretina(orientation = null, fallback-class = null)\n  +density('retina', orientation, fallback-class)\n    {block}\n\nlandscape(density = null, fallback-class = null)\n  selected = selector()\n  if not (rupture.rasterise-media-queries)\n    if -is-string(density)\n      density = convert(density)\n    if density\n      +pixel-ratio(density, orientation: landscape, fallback-class)\n        {block}\n    else\n      @media only screen and (orientation: landscape)\n        {block}\n      if fallback-class\n        +create-fallback-class(selected, fallback-class)\n          {block}\n\nportrait(density = null, fallback-class = null)\n  selected = selector()\n  if not (rupture.rasterise-media-queries)\n    if -is-string(density)\n      density = convert(density)\n    if density\n      +pixel-ratio(density, orientation: portrait, fallback-class)\n        {block}\n    else\n      @media only screen and (orientation: portrait)\n        {block}\n      if fallback-class\n        +create-fallback-class(selected, fallback-class)\n          {block}\n","// ---------\n// Utilities\n// ---------\n\n// Mixin: Pie\n// When turned on, enables css3 pie (http://css3pie.com/) for all\n// elements that can use it. Which makes IE look a lot nicer.\n\npie()\n  behavior: url(pie-path) if pie-enabled\n\n// Mixin: Rounded\n// \n// Unless you are working with a ridiculously large element, this will round the\n// corners as much as css will allow. Even in IE.\n// \n// ex. rounded()\n\nrounded()\n  border-radius: 999px\n  pie()\n\n// Alias: No Select\n// You can't highlight this.\n\nno-select()\n  -webkit-touch-callout: none\n  user-select: none\n\n// Alias: B\n// Border, but quicker and with an intelligent default.\n\nb()\n  arguments = unquote('1px solid') unless arguments\n  border: arguments\n\n// Mixin: Bg\n// \n// Makes background (with image) declarations a little simpler. Use this with\n// the global img-path variable to set a base image path that you don't have to\n// keep repeating. Also sets 'no-repeat' as the default background-repeat.\n// \n// ex. bg: 'test.png'\n// ex. bg: 'other.jpg' center center repeat\n\nbg(path, args...)\n  args = unquote('no-repeat') unless args\n  background: url(img-path path) args\n\n// Mixin: bg-retina\n// \n// Make sure the image path is double the size, pass it halved numbers, and\n// you're in the retina-clear.\n// \n// ex. bg-retina: 'test.png' 200px 100px\n// ex. bg-retina: 'other.jpg' 100px 50px center center repeat\n\nbg-retina(path, width, height, args...)\n  args = unquote('no-repeat') unless args\n  set_size = false\n  \n  for arg in args\n    if arg == 'no-repeat'\n      set_size = true\n\n  background: url(img-path path) args\n  background-size: width height\n  \n  if set_size\n    size: width height\n\n// Alias: Bold\n// It's just faster to type bold() than font-weight: bold\n\nbold()\n  font-weight: bold\n\n// Alias: Italic\n// It's just faster to type italic() than font-style: italic\n\nitalic()\n  font-style: italic\n\n// Alias: Normal\n// Put the font-weight and style back to normal\n\nnormal()\n  font-weight: normal\n  font-style: normal\n\n// Mixin: Image Replace\n// \n// Image replacement. Pass it an image path and the image's dimensions and any\n// text will be hidden in the div and it will show an image instead. Uses the\n// fanciest new method, props to Paul Irish. Only works when called as a\n// function with parens. Do not try to do it with a colon!\n// \n// ex. ir('test.jpg', 200 400)\n\nimage-replace(path, dimensions...)\n  dimensions = dimensions[0]\n  font: 0/0 a\n  text-shadow: none\n  color: transparent\n  bg: path if path\n  if length(dimensions) > 1\n    width: unit(dimensions[0], 'px')\n    height: unit(dimensions[1], 'px')\n  else\n    warn(\"Make sure you also pass the image dimensions. Example: ir('/img/whatever.jpg', 200px 400px)\")\n\n// Alias: ir\nir = image-replace\n\n// Mixin: Columns\n// \n// For css3 columns. Takes column count (int), column gap (px, em), column width\n// (px, em), and a border-like declaration if you want a column rule. This\n// follows exactly with the css3 spec, it's just quicker.\n// \n// ex. columns()\n// ex. columns: 5\n// ex. columns(8, 15px, 200px, '1px solid red')\n\ncolumns(count=3, gap=30px, width=null, rule=null)\n  column-count: count\n  column-gap: gap\n  column-width: width if width\n  column-rule: unquote(rule) if rule\n\n// Mixin: Avoid Column Break\n// \n// If you have a list that is broken into columns, this will make sure that the\n// list item is not split across columns awkwardly. Works only in webkit at the\n// moment.\n// \n// ex. avoid-column-break()\n\navoid-column-break()\n  column-break-inside: avoid\n\n// Mixin: Triangle\n// \n// One of my favorites. Makes a little css triangle for you. Pass it a direction\n// (up, down, left, right), size (in pixels), and a color.\n// \n// ex. triangle()\n// ex. triangle: 'down' 15px blue\n\ntriangle(direction='up', size=10px, color=#000)\n  width: 0\n  height: 0\n  if direction == 'up'\n    border-left: size solid transparent\n    border-right: size solid transparent\n    border-bottom: size solid color\n  else if direction == 'down'\n    border-left: size solid transparent\n    border-right: size solid transparent\n    border-top: size solid color\n  else if direction == 'left'\n    border-top: size solid transparent\n    border-bottom: size solid transparent\n    border-right: size solid color\n  else if direction == 'right'\n    border-top: size solid transparent\n    border-bottom: size solid transparent\n    border-left: size solid color\n\n// Mixin: Sprite\n// \n// Given a direction in which your sprites are aligned (horizontal/vertical) and\n// an iteration, will measure the width/height of your first sprite frame and\n// step through to the nth next one, depending on the given iteration number.\n// Width/height must be defined for this to work (as is the case for any sprite)\n// \n// ex. sprite: 2\n// ex. sprite: 5 'horizontal'\n// \n// TODO: Try using image-size here if @width or @height aren't defined\n\nsprite(iteration, orientation='vertical')\n  if orientation == 'vertical'\n    background-position: 0 unit(@height*-1*iteration, 'px')\n  else if orientation == 'horizontal'\n    // warn(unit(@width*iteration, 'px'))\n    background-position: unit(@width*iteration, 'px') 0\n\n// Alias: group\n// Clearfix with a better name. Excellent for wrangling floats.\n\ngroup = clearfix\n\n// Alias: Inline Block\n// Cross browser inline block display. Saves many IE headaches.\n\ninline-block()\n  display: inline-block\n\n  if support-for-ie\n    display: -moz-inline-stack\n    vertical-align: baseline\n    zoom: 1\n    *display: inline\n    *vertical-align: auto\n\n// Mixin: Vertically Align\n// \n// Cross browser vertical align. Works down to IE9.\n// \n// ex. vertically-align()\n\nvertically-align()\n  position: relative\n  top: 50%\n  transform: translateY(-50%)\n\n// Mixin: Media\n// \n// Based on Nicole Sullivan's media class, made famous by Facebook\n// http://www.stubbornella.org/content/2010/06/25/the-media-object-saves-\n// hundreds-of-lines-of-code\n// \n// Put this on a parent and it will split the first two children left and right,\n// like you would with perhaps a comment with an avatar to the left. Pass it a\n// margin between the two. Explained fully here:\n// http://carrotblog.com/css-patterns-evolved/\n// \n// This mixin works right when the element you apply it to has two or three\n// direct children. The first one will float to the left, the second one will be\n// to the right of the first, and third will go farthest right.\n// \n// ex. media()\n// ex. media: 15px\n// ex. media: 15px 10px\n\nmedia(margin=10px)\n\n  left-margin = margin\n  right-margin = margin\n\n  if length(arguments) > 1\n    left-margin = arguments[0]\n    right-margin = arguments[1]\n\n  overflow: hidden\n  zoom: 1\n\n  & > *\n    inline-block()\n    overflow: hidden\n  & > *:first-child\n    float: left\n    margin-right: right-margin\n  & > *:nth-child(3)\n    float: right\n    margin-left: left-margin\n\n// Mixin: Raquo\n// \n// Because technically raquo is not semantic, it's better to add it like this.\n// \n// ex. raquo()\n\nraquo()\n  &:after\n    content: \" \\00BB\"\n\n// Mixin: Font Face\n// \n// Super simple font-face declaration. Just give the name and the folder it\n// lives in. Make sure the font name matches the name of the files. Uses the\n// fontspring syntax:\n// http://www.fontspring.com/blog/the-new-bulletproof-font-face-syntax\n// \n// ex. font-face(proxima-nova, '/fonts')\n\nfont-face(name, folder, weight='normal', style='normal')\n  @font-face\n    font-family: name\n    src: url(folder unquote('/') name unquote('.eot') '?#iefix') format('embedded-opentype'), url(folder unquote('/') name unquote('.woff')) format('woff'), url(folder unquote('/') name unquote('.ttf')) format('truetype'), url(folder unquote('/') name unquote('.eot') unquote('#') name) format('svg');\n    font-weight: unquote(weight)\n    font-style: unquote(style)\n\n// Mixin: Debug\n// \n// Debugging tool - drop this at root level in your css and it will put borders\n// on every element so you can see what's up. It will also flag them if you made\n// mistakes like put in inline styles, forgot an alt on an image, left the alt\n// blank, etc. For god's sake don't use this in production. All credit for this\n// goes to intuit.css, from which I adapted it (and improved it a bit).\n// https://github.com/csswizardry/inuit.css\n\ndebug()\n  html\n\n    div\n      border: 1px solid green\n\n    [style], style\n      border: 5px solid yellow\n\n    style\n      border: block\n\n    img\n      border: 5px solid red\n\n    img[alt]\n      border-color: green\n\n    img[alt=\"\"]\n      border-color: yellow\n\n    a\n      border: 5px solid yellow\n\n    a[title]\n      border-color: green\n\n    a[href=\"#\"]\n      outline-color: yellow\n\n    a[target]\n      border-color: red\n\n    [class=\"\"], [id=\"\"]\n      border: 5px solid yellow\n\n// Custom animation timing functions, ported from bourbon\n// https://github.com/thoughtbot/bourbon/blob/master/app/assets/stylesheets/addons/_timing-functions.scss\n\n// ease-in\nease-in-quad =      cubic-bezier(0.550,  0.085, 0.680, 0.530)\nease-in-cubic =     cubic-bezier(0.550,  0.055, 0.675, 0.190)\nease-in-quart =     cubic-bezier(0.895,  0.030, 0.685, 0.220)\nease-in-quint =     cubic-bezier(0.755,  0.050, 0.855, 0.060)\nease-in-sine =      cubic-bezier(0.470,  0.000, 0.745, 0.715)\nease-in-expo =      cubic-bezier(0.950,  0.050, 0.795, 0.035)\nease-in-circ =      cubic-bezier(0.600,  0.040, 0.980, 0.335)\nease-in-back =      cubic-bezier(0.600, -0.280, 0.735, 0.045)\nease-in-swift =     cubic-bezier(0.900,  0.000, 0.450, 1.000)\n\n// ease-out\nease-out-quad =     cubic-bezier(0.250,  0.460, 0.450, 0.940)\nease-out-cubic =    cubic-bezier(0.215,  0.610, 0.355, 1.000)\nease-out-quart =    cubic-bezier(0.165,  0.840, 0.440, 1.000)\nease-out-quint =    cubic-bezier(0.230,  1.000, 0.320, 1.000)\nease-out-sine =     cubic-bezier(0.390,  0.575, 0.565, 1.000)\nease-out-expo =     cubic-bezier(0.190,  1.000, 0.220, 1.000)\nease-out-circ =     cubic-bezier(0.075,  0.820, 0.165, 1.000)\nease-out-back =     cubic-bezier(0.175,  0.885, 0.320, 1.275)\nease-out-swift =    cubic-bezier(0.550,  0.000, 0.100, 1.000)\n\n// ease-in-out\nease-in-out-quad =  cubic-bezier(0.455,  0.030, 0.515, 0.955)\nease-in-out-cubic = cubic-bezier(0.645,  0.045, 0.355, 1.000)\nease-in-out-quart = cubic-bezier(0.770,  0.000, 0.175, 1.000)\nease-in-out-quint = cubic-bezier(0.860,  0.000, 0.070, 1.000)\nease-in-out-sine =  cubic-bezier(0.445,  0.050, 0.550, 0.950)\nease-in-out-expo =  cubic-bezier(1.000,  0.000, 0.000, 1.000)\nease-in-out-circ =  cubic-bezier(0.785,  0.135, 0.150, 0.860)\nease-in-out-back =  cubic-bezier(0.680, -0.550, 0.265, 1.550)\nease-in-out-swift = cubic-bezier(0.900,  0.000, 0.100, 1.000)\n\n// Function: cached-image-url\n// \n// An alternative to url() that stores images in a cache for use in\n// cache-images().\n\nbackground-images = null\n\ncached-image-url()\n  base = ''\n  s = unquote('url(\"' + base + join('', arguments) + '\")')\n  push(background-images, s) unless s in background-images\n  url(arguments)\n\n// Mixin: Cache Images\n// Use this at the end of all your styles outputs the image cache script.\n\ncache-images()\n  body:after\n    display: none\n    content: background-images\n","// ------\n// Vendor\n// ------\n\n// Utilities specifically intended for helping with vendor-prefixed\n// css properties\n\n// Alias: Transition\n//\n// Transition with an intelligent default.\n//\n// ex. transition()\n// ex. transition: color 1s ease\n// ex. transition(color 1s ease, background 2.4s linear)\n\n//Cache nib transition mixin.\n// _transition = transition\n\ntransition(arguments)\n  arguments = unquote('all .3s ease') unless arguments\n  transition: arguments\n\n\n// Alias: Box Shadow\n//\n// Box shadow with pie support, if you are using it.\n//\n// ex. box-shadow: 1px 1px 3px blue\n// ex. box-shadow(1px 1px 3px blue, inset 2px 0 5px rgba(0,0,0,.5))\n\nbox-shadow()\n  box-shadow: arguments\n  pie()\n\n// Alias: Border Radius\n//\n// Border-radius with pie support, if you are using it.\n//\n// ex. +round-corners(5px)\n\nborder-radius()\n  border-radius: arguments\n  pie()\n\n// Alias: Opacity\n//\n// I know, it seems silly. But every time you go to old IE testing you will be\n// thanking yourself for using this instead of the normal opacity declaration.\n// Overrides default opacity.\n//\n// ex. opacity: .6\n\nopacity(opacity, args...)\n  \n  if args  \n    filter: s(\"progid:DXImageTransform.Microsoft.Alpha(Opacity=%s)\", opacity * 100 args) if support-for-ie  \n  else\n    filter: s(\"progid:DXImageTransform.Microsoft.Alpha(Opacity=%s)\", opacity * 100) if support-for-ie  \n    \n  opacity: opacity args\n\n// Alias: Border Box\n// A quicker way to specify border-box sizing.\n\nborder-box()\n  box-sizing: border-box\n\n// Alises: background-appearance-x and y\n//\n// In case you want to use an unsupported background-position property, this\n// should set you straight!\n\nbackground-position-x(x)\n  background-position: x 0\n\nbackground-position-y(y)\n  background-position: 0 y\n\n// Mixin: Opentype ligatures\n//\n// The vast majority of fonts contain lowercase and uppercase alphabets,\n// numerals, punctuation and accents. // Many professionally-designed fonts\n// also contain ligatures, alternative characters, smallcaps, different kinds of\n// numbers, and sometimes much more besides. This enables it.\n//\n// Source: http://www.newnet-soft.com/blog/csstypography\n// Additional: http://blog.fontdeck.com/post/15777165734/opentype-1\n\nopenTypeLigatures()\n  -moz-font-feature-settings:    \"liga=1, dlig=1\"\n  -ms-font-feature-settings:     \"liga\", \"dlig\"\n  -webkit-font-feature-settings: \"liga\", \"dlig\"\n  -o-font-feature-settings:      \"liga\", \"dlig\"\n  font-feature-settings:         \"liga\", \"dlig\"\n","// -----------\n// Interaction\n// -----------\n\n// These mixins trigger on some sort of interaction with an element, like a\n// hover or a click.\n\n// Mixin: Hover Darken\n// \n// Darkens the color and/or background color on your element when it's hovered.\n// Takes an optional percentage to darken it.\n// \n// ex. hover-darken()\n// ex. hover-darken: 30%\n\nhover-darken(percent = 15%, forceUseColor = false)\n  &:hover\n    if @background and !forceUseColor\n      background-color: darken(@background, percent)\n    else if @background-color and !forceUseColor\n      background-color: darken(@background-color, percent)\n    else if @color\n      color: darken(@color, percent)\n    else\n      warn('you need to set a color or background color on your element for this to work')\n\n// Mixin: Hover Lighten\n// \n// Works the same way as hover-darken but lightens the color.\n// \n// ex. hover-lighten()\n// ex. hover-lighten: 30%\n\nhover-lighten(percent = 15%, forceUseColor = false)\n  &:hover\n    if @background and !forceUseColor\n      background-color: lighten(@background, percent)\n    else if @background-color and !forceUseColor\n      background-color: lighten(@background-color, percent)\n    else if @color\n      color: lighten(@color, percent)\n    else\n      warn('you need to set a color or background color on your element for this to work')\n\n// Mixin: Hover Underline\n// \n// This one is interesting, and may need tweaking to get it to work right on the\n// intended element. Works very nicely for text like in a span, and can animate.\n// \n// ex. hover-underline()\n// ex. hover-underline: 2px 'dotted'\n\nhover-underline(borderSize = 1px, type = 'solid', color = null)\n  border-bottom: borderSize unquote(type) transparent\n  \n  &:hover\n    border-bottom: borderSize unquote(type) color\n\n// Mixin: Hover Pop\n// \n// On hover, your element pops out from the page. For scale, it takes an integer\n// or float, 1 represents 100%, 2 is 200%, etc. Optionally can also rotate,\n// pass it a number followed by \"deg\", like 180deg. If you pass true for\n// shadow, it will animate in a drop shadow to add to the effect.\n// \n// ex. hover-pop: 1.5\n// ex. hover-pop: 2.6 90deg\n// ex. hover-pop: 1.2 45deg true\n\nhover-pop(scale = 1.2, rotate = null, shadow = null)\n  if shadow\n    box-shadow: 0 0 1px transparent\n    \n  &:hover\n    position: relative\n    z-index: 10\n    transform: scale(scale)\n    if shadow\n      box-shadow: 0 0 5px rgba(#000, .3)\n    if rotate\n      transform: scale(scale) rotate(rotate)\n\n// Mixin: Hover Fade\n// \n// On hover, fades the element's opacity down. Takes an amount as an integer\n// between 0 and 1, like opacity normally does. Recommended to be used with\n// transition.\n\n// ex. hover-fade: .5\n\nhover-fade(amount = .5)\n  &:hover\n    opacity: amount\n\n// Mixin: Hover Color\n// \n// Will swap an elements color or background color on hover. Takes a color in\n// any format as the first argument. Will first look for a background color to\n// change, then a color.\n// \n// ex. hover-color: #D45D86\n\nhover-color(color, forceUseColor = false)\n  &:hover\n    if @background and !forceUseColor\n      background-color: color\n    else if @background-color and !forceUseColor\n      background-color: color\n    else if @background-color and !force-use-color\n      background-color: color\n    else if @color\n      color: color\n    else\n      warn('you need to set a color or background color on your element for this to work')\n\n// TODO:\n// *+click-down(pixels)*\n// *+click-shadow(radius)*\n// *+button-interaction(color)*\n"]}